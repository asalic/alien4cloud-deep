tosca_definitions_version: alien_dsl_2_0_0

metadata:
  template_name: ElasticCluster
  template_version: 0.1.0-SNAPSHOT
  template_author: admin

description: ""

imports:
  - tosca-normative-types:1.0.0-ALIEN20
  - indigo-types:1.0.0

topology_template:
  inputs:
    hybrid:
      type: boolean
      required: false
      default: false
      description: "Flag to specify that this WorkerNode will work in a hybrid environment"
    wn_num:
      type: integer
      required: true
      default: 1
      description: "This property is used to indicate the maximum number of instances that should be created for the associated TOSCA Node Template by a TOSCA orchestrator."
    fe_cpus:
      type: integer
      required: false
      constraints:
        - greater_or_equal: 1
      description: "Number of (actual or virtual) CPUs associated with the Compute node."
    wn_mem:
      type: scalar-unit.size
      required: false
      constraints:
        - greater_or_equal: 0 MB
      description: "Size of memory available to applications running on the Compute node (default unit is MB)."
    wn_cpus:
      type: integer
      required: false
      constraints:
        - greater_or_equal: 1
      description: "Number of (actual or virtual) CPUs associated with the Compute node."
    fe_mem:
      type: scalar-unit.size
      required: false
      constraints:
        - greater_or_equal: 0 MB
      description: "Size of memory available to applications running on the Compute node (default unit is MB)."
  node_templates:
    lrms_wn:
      metadata:
        a4c_edit_x: 0
        a4c_edit_y: "-30"
      type: tosca.nodes.indigo.Compute
      properties:
        zabbix_server: "orchestrator.cloud.cnaf.infn.it"
        zabbix_server_port: 10051
        zabbix_server_metadata: "Linux      668c875e-9a39-4dc0-a710-17c41376c1e0"
      capabilities:
        scalable:
          properties:
            min_instances: 1
            max_instances: 1
            count: 0
            default_instances: 1
        os:
          properties:
            image: "linux-ubuntu-14.04-vmi"
        endpoint:
          properties:
            private_ip: true
            protocol: tcp
            secure: false
            network_name: PRIVATE
            initiator: source
        host:
          properties:
            num_cpus: { get_input: wn_cpus }
            mem_size: { get_input: wn_mem }
    wn_node:
      type: tosca.nodes.indigo.LRMS.WorkerNode.Slurm
      properties:
        hybrid: { get_input: hybrid }
      requirements:
        - hostedOnLrmsWnHost:
            type_requirement: host
            node: lrms_wn
            capability: tosca.capabilities.indigo.Container
            relationship: tosca.relationships.HostedOn
      capabilities:
        wn:
          properties:
            min_instances: 0
            max_instances: { get_input: wn_num }
            default_instances: 1
    lrms_server:
      metadata:
        a4c_edit_x: 261
        a4c_edit_y: "-2"
      type: tosca.nodes.indigo.Compute
      properties:
        zabbix_server: "orchestrator.cloud.cnaf.infn.it"
        zabbix_server_port: 10051
        zabbix_server_metadata: "Linux      668c875e-9a39-4dc0-a710-17c41376c1e0"
      capabilities:
        scalable:
          properties:
            min_instances: 1
            max_instances: 1
            count: 1
            default_instances: 1
        os:
          properties:
            image: "linux-ubuntu-14.04-vmi"
        endpoint:
          properties:
            dns_name: slurmserver
            private_ip: true
            protocol: tcp
            secure: false
            network_name: PUBLIC
            initiator: source
        host:
          properties:
            num_cpus: { get_input: fe_cpus }
            mem_size: { get_input: fe_mem }
    lrms_front_end:
      type: tosca.nodes.indigo.LRMS.FrontEnd.Slurm
      properties:
        wn_ips: 
        hybrid: { get_input: hybrid }
      requirements:
        - hostedOnLrmsServerHost:
            type_requirement: host
            node: lrms_server
            capability: tosca.capabilities.indigo.Container
            relationship: tosca.relationships.HostedOn
      capabilities:
        lrms:
          properties:
            type: slurm
    elastic_cluster_front_end:
      type: tosca.nodes.indigo.ElasticCluster
      properties:
        secret_token: "not_very_secret_token"
        deployment_id: "orchestrator_deployment_id"
        orchestrator_url: "http://orchestrator01-indigo.cloud.ba.infn.it:8080/orchestrator"
        iam_access_token: "iam_access_token"
        iam_clues_client_id: "iam_clues_client_id"
        iam_clues_client_secret: "iam_clues_client_secret"
        marathon_credentials: 
          protocol: http
          token_type: password
          user: admin
          token: password
        chronos_credentials: 
          protocol: http
          token_type: password
          user: admin
          token: password
        mesos_credentials: 
          protocol: http
          token_type: password
          user: admin
          token: password
        hybrid: { get_input: hybrid }
      requirements:
        - hostedOnLrmsFrontEndLrms:
            type_requirement: lrms
            node: lrms_front_end
            capability: tosca.capabilities.indigo.LRMS.Slurm
            relationship: tosca.relationships.HostedOn
        - dependsOnWnNodeFeature:
            type_requirement: dependency
            node: wn_node
            capability: tosca.capabilities.Node
            relationship: tosca.relationships.DependsOn
  outputs:
    lrms_wn_public_address:
      value: { get_attribute: [ lrms_wn, public_address ] }

