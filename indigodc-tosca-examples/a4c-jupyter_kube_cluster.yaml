tosca_definitions_version: alien_dsl_2_0_0

metadata:
  template_name: JupyterKubeCluster
  template_version: 0.1.0-SNAPSHOT
  template_author: admin

description: ""

imports:
  - tosca-normative-types:1.0.0-ALIEN20
  - indigo-types:1.0.0

topology_template:
  inputs:
    admin_username:
      type: string
      required: false
      default: kubeuser
    fe_cpus:
      type: integer
      required: false
      constraints:
        - greater_or_equal: 1
      description: "Number of (actual or virtual) CPUs associated with the Compute node."
    wn_num:
      type: integer
      required: false
      default: 1
      description: "the number of resources"
    wn_mem:
      type: scalar-unit.size
      required: false
      constraints:
        - greater_or_equal: 0 MB
      description: "Size of memory available to applications running on the Compute node (default unit is MB)."
    wn_cpus:
      type: integer
      required: false
      constraints:
        - greater_or_equal: 1
      description: "Number of (actual or virtual) CPUs associated with the Compute node."
    admin_token:
      type: string
      required: false
      default: "some_insecure_token"
    fe_mem:
      type: scalar-unit.size
      required: false
      constraints:
        - greater_or_equal: 0 MB
      description: "Size of memory available to applications running on the Compute node (default unit is MB)."
  node_templates:
    lrms_server:
      metadata:
        a4c_edit_x: 22
        a4c_edit_y: "-20"
      type: tosca.nodes.indigo.Compute
      properties:
        zabbix_server: "orchestrator.cloud.cnaf.infn.it"
        zabbix_server_port: 10051
        zabbix_server_metadata: "Linux      668c875e-9a39-4dc0-a710-17c41376c1e0"
      capabilities:
        scalable:
          properties:
            min_instances: 1
            max_instances: 1
            count: 1
            default_instances: 1
        os:
          properties:
            image: "linux-ubuntu-16.04-vmi"
        endpoint:
          properties:
            dns_name: kubeserver
            private_ip: true
            ports: 
              jupyterhub_port: 
                protocol: tcp
                source: 8000
              dashboard_port: 
                protocol: tcp
                source: 30443
            protocol: tcp
            secure: false
            network_name: PUBLIC
            initiator: source
        host:
          properties:
            num_cpus: { get_input: fe_cpus }
            mem_size: { get_input: fe_mem }
    lrms_front_end:
      type: tosca.nodes.indigo.LRMS.FrontEnd.Kubernetes
      properties:
        admin_username: { get_input: admin_username }
        admin_token: { get_input: admin_token }
        wn_ips: 
        hybrid: false
      requirements:
        - hostedOnLrmsServerHost:
            type_requirement: host
            node: lrms_server
            capability: tosca.capabilities.indigo.Container
            relationship: tosca.relationships.HostedOn
      capabilities:
        lrms:
          properties:
            type: kubernetes
    jupyterhub:
      type: tosca.nodes.indigo.JupyterHub
      properties:
        spawner: kubernetes
        authenticator: local
      requirements:
        - dependsOnLrmsFrontEndFeature:
            type_requirement: dependency
            node: lrms_front_end
            capability: tosca.capabilities.Node
            relationship: tosca.relationships.DependsOn
        - hostedOnLrmsServerHost:
            type_requirement: host
            node: lrms_server
            capability: tosca.capabilities.indigo.Container
            relationship: tosca.relationships.HostedOn
    lrms_wn:
      metadata:
        a4c_edit_x: 301
        a4c_edit_y: "-2"
      type: tosca.nodes.indigo.Compute
      properties:
        zabbix_server: "orchestrator.cloud.cnaf.infn.it"
        zabbix_server_port: 10051
        zabbix_server_metadata: "Linux      668c875e-9a39-4dc0-a710-17c41376c1e0"
      capabilities:
        scalable:
          properties:
            min_instances: 1
            max_instances: 1
            count: { get_input: wn_num }
            default_instances: 1
        os:
          properties:
            image: "linux-ubuntu-16.04-vmi"
        endpoint:
          properties:
            private_ip: true
            protocol: tcp
            secure: false
            network_name: PRIVATE
            initiator: source
        host:
          properties:
            num_cpus: { get_input: wn_cpus }
            mem_size: { get_input: wn_mem }
    wn_node:
      type: tosca.nodes.indigo.LRMS.WorkerNode.Kubernetes
      properties:
        hybrid: false
      requirements:
        - hostedOnLrmsWnHost:
            type_requirement: host
            node: lrms_wn
            capability: tosca.capabilities.indigo.Container
            relationship: tosca.relationships.HostedOn
      capabilities:
        wn:
          properties:
            min_instances: 1
            max_instances: 1
            default_instances: 1

