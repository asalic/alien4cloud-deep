tosca_definitions_version: tosca_simple_yaml_1_0_0_wd03

name: tosca-base-types
description: Contains the normative types definition.

node_types:
  tosca.nodes.Root:
    abstract: true
    description: >
      This is the default (root) TOSCA Node Type that all other TOSCA nodes should extends.
      This allows all TOSCA nodes to have a consistent set of features for modeling and management
      (e.g, consistent definitions for requirements, capabilities, and lifecycle interfaces).
    tags:
      icon: /images/root.png
    requirements:
      dependency:
        type: tosca.capabilities.Feature
        lower_bound: 0
        upper_bound: unbounded
    capabilities:
      feature:
        type: tosca.capabilities.Feature
        lower_bound: 0
        upper_bound: unbounded
    interfaces:
      Standard:
        description: Default lifecycle for nodes in TOSCA.
        create:
          description: Basic lifecycle create operation.
        configure:
          description: Basic lifecycle configure operation.
        start:
          description: Basic lifecycle start operation.
        stop:
          description: Basic lifecycle stop operation.
        delete:
          description: Basic lifecycle delete operation.

  # Infrastructure components
  tosca.nodes.Compute:
    derived_from: tosca.nodes.Root
    description: >
      Represents a real or virtual machine or ‘server’. Informations specified on the Compute
      node will be used to find the machine that fits the given requirements in the cloud
      available machines. If no sizing informations are specified the cloud’s provider default
      machine will be used. It is strongly recommended to specify the required cpus and memory
      at least.
    tags:
      icon: /images/compute.png
    properties:
      disk_size:
        type: integer
        constraints:
          - greater_than: 0
      num_cpus:
        type: integer
        constraints:
          -  greater_than: 0
      mem_size:
        type: integer
        constraints:
          - greater_than: 0
      os_arch:
        type: string
      os_type:
        type: string
      os_distribution:
        type: string
      os_version:
        type: string
      ip_address:
        type: string
    capabilities:
      compute:
        type: tosca.capabilities.Container
        lower_bound: 0
        upper_bound: unbounded

  # Software components or middleware ?
  tosca.nodes.SoftwareComponent:
    abstract: true
    derived_from: tosca.nodes.Root
    description: >
      The TOSCA SoftwareComponent Node Type represents a generic software component
      that can be managed and run by a TOSCA Compute Node Type.
    requirements:
      host:
        type: tosca.capabilities.Container
#        node_filter:
#          properties:
#            - os_type: { equal: "linux" }
#            - os_version: { valid_values: [ "13.10", "14.10" ] }
#          capabilities:
#            - my_compute:
#              properties:
#                num_cpus: { in_range: [ 1, 4 ] }
#                mem_size: { greater_or_equal: 2 MB }
#            - mytypes.capabilities.compute.encryption:
#              properties:
#                algorithm: { equal: aes }
#                keylength: { valid_values: [ 128, 256 ] }
    tags:
      icon: /images/software.png

  tosca.nodes.RDBMS:
    abstract: true
    derived_from: tosca.nodes.SoftwareComponent
    description: >
      The TOSCA RDBMS Node Type represents a generic relational database. It should be inherited
      to define an actual Database (Such as MySQL) and lifecycle implementation.
    tags:
      icon: /images/relanode_filtertional_db.png

  tosca.nodes.WebServer:
    abstract: true
    derived_from: tosca.nodes.SoftwareComponent
    description: >
      The TOSCA WebServer Node Type represents a generic web server. It should be inherited to define
      an actual web server (Such as Apache) and lifecycle implementation.

  tosca.nodes.ApplicationServer:
    abstract: true
    derived_from: tosca.nodes.SoftwareComponent
    description: >
      The TOSCA ApplicationServer Node Type represents a generic application server. It should be inherited
      to define an actual application server (Such as Tomcat) and lifecycle implementation.
    capabilities:
      host:
        type: tosca.capabilities.Container
        lower_bound: 0
        upper_bound: unbounded

capability_types:
  tosca.capabilities.Root:
    description: This is the default (root) TOSCA Capability Type definition that all other TOSCA Capability Types derive from
  tosca.capabilities.Feature:
    derived_from: tosca.capabilities.Root
    description: >
      The TOSCA Feature Capability represents that a given component can have a basic DependsOn relationship type with another one.
  tosca.capabilities.Container:
    derived_from: tosca.capabilities.Feature
    properties:
      containee_types:
        type: string
    description: >
      The TOSCA Container Capability represents that a given component can act as a container.
  tosca.capabilities.Endpoint:
    derived_from: tosca.capabilities.Feature
    properties:
      protocol:
        type: string
        default: http
      port:
        type: integer
        constraints:
          - greater_or_equal: 1
          - less_or_equal: 65535
      secure:
        type: boolean
        default: false

relationship_types:
  tosca.relationships.Root:
    description: TOSCA Root relationship (used to define the default lifecycle).
    # The TOSCA root relationship type has no property mappings
    interfaces:
      tosca.interfaces.relationship.Configure:
        description: >
          Default lifecycle for nodes in TOSCA.
        pre_configure_source:
          description: Operation to pre-configure the source endpoint.
        pre_configure_target:
          description: Operation to pre-configure the target endpoint.
        post_configure_source:
          description: Operation to post-configure the source endpoint.
        post_configure_target:
          description: Operation to post-configure the target endpoint.
        add_target:
          description: Operation to add a target node.
        remove_target:
          description: Operation to remove a target node.
  tosca.relationships.DependsOn:
    derived_from: tosca.relationships.Root
    description: >
      A generic depends on relationship.
    valid_sources: [ tosca.capabilities.Feature ]
    valid_targets: [ tosca.capabilities.Feature ]
  tosca.relationships.HostedOn:
    derived_from: tosca.relationships.DependsOn
    description: Relationship to use to describe that the source is hosted (installed/ deployed) on the target node.
    valid_sources: [ tosca.capabilities.Container ]
    valid_targets: [ tosca.capabilities.Container ]
  tosca.relationships.ConnectsTo:
    derived_from: tosca.relationships.DependsOn
    valid_sources: [ tosca.capabilities.Endpoint ]
    valid_targets: [ tosca.capabilities.Endpoint ]

artifact_types:
  tosca.artifacts.ShellScript:
    description: A shell script (.sh file)
  tosca.artifacts.TarGzFile:
    description: A tar gz distribution
